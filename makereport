#! /usr/bin/env python3

import json
import os
import sys

import html_formatter
import slack_formatter
import report_generator


if not os.path.exists('reports'):
    os.makedirs('reports')

fake = False
html_formatter_obj = html_formatter.HTMLFormatter(fake=fake)
slack_formatter_obj = slack_formatter.SlackFormatter()
users = {
    'noemi': 'UHWD9BHPD',
    'rands': 'U04T4TH8Y',
    'roy': 'U06NSQT34',
    'jenna': 'U8MEPG4Q7',
    'jude': 'UCR03V5BP',
    'moj_hoss': 'UD9M2GA2J'
}

date = "2019-08-25"
days = 7

force_regen = False
if len(sys.argv) > 1 and sys.argv[1] == "regen":
    force_regen = True
# for x in [None, roy, jenna, noemi]:
rg = report_generator.ReportGenerator(fake=fake)
print("users: {}".format(users))
print("Generating report for {}/{}".format(date, days))
(report, previous_report) = rg.report(date, days, users=users.values(), force_generate=force_regen)
# rg.summarize_report(report)
f = open("reports/{}-{}days-report.json".format(date, days), "w")
f.write(json.dumps(report, indent=4))
f.close()
print("")
# slack_formatter_obj.send_report(users['roy'], report, previous_report)
slack_formatter_obj.send_report(users['roy'], report, previous_report, override_uid="CMURXPZK3")
# slack_formatter_obj.send_report(users['jenna'], report)
mhtml = html_formatter_obj.format(report)
f = open("reports/{}-{}days-report.html".format(date, days), "w")
f.write(mhtml)
f.close()
