#! /usr/bin/env python3

import json
import sys
import traceback

import channel
import config
import slacker
import slack_token
import slack_user_report
import slack_channel_report
import report_generator
import report_targets

roy = "U06NSQT34"

fake = False
rg = report_generator.ReportGenerator(fake=fake)
slack_user_reporter = slack_user_report.SlackUserReport()
slack_channel_reporter = slack_channel_report.SlackChannelReport()
cobj = channel.Channel()
sobj = slacker.Slacker(config.slack_name, slack_token.token)

users = report_targets.users()
channel_dict = report_targets.channels()
channels = channel_dict.keys()

last_week = rg.latest_week_start()
days = 7

force_regen = False
if len(sys.argv) > 1 and sys.argv[1] == "regen":
    force_regen = True

print("users: {}".format(users))
print("channels: {}".format(channels))
print("Week start: {}".format(last_week))
print("Getting report for {}/{}".format(last_week, days))
(report, previous_report) = rg.report(last_week, days, users=users, channels=channels, force_generate=force_regen)
f = open("reports/{}-{}days-report.json".format(last_week, days), "w")
f.write(json.dumps(report, indent=4))
f.close()
for user in users:
    try:
        # slack_user_reporter.send_report(user, report, previous_report, send=True, override_uid=roy)
        slack_user_reporter.send_report(user, report, previous_report, send=True)
    except Exception as ex:
        print("Failed to send a report to {}: {} {}".format(user, ex, sys.exc_info()[0]))
        traceback.print_exc()

topic = "Channel for automated postings of channel stats for the #{} channel.  Feedback/questions to #rands-slack-statistics"

for channel in channels:
    dest = channel_dict[channel]
    name = cobj.get(channel)['name']
    nt = topic.format(name)
    try:
        sobj.conditional_set_topic(dest, nt, leave=True)
    except Exception as ex:
        print("Failed to set topic on {}/{}: {} {}".format(channel, name, ex, sys.exc_info()[0]))
        traceback.print_exc()
    try:
        slack_channel_reporter.send_report(channel, report, previous_report, send=True, override_uid=roy, summary=True)
    except Exception as ex:
        print("Failed to send report to {}/{}: {} {}".format(channel, name, ex, sys.exc_info()[0]))
        traceback.print_exc()
